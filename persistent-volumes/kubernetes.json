{
	"apiVersion": "vlabs",
	"properties": {
		"orchestratorProfile": {
			"orchestratorType": "Kubernetes",
			"kubernetesConfig": {
				"kubeletConfig": {
					"--max-pods": "250",
					"--authentication-token-webhook": "true",
					"--authorization-mode": "Webhook",
					"--kube-reserved-cgroup": "/kube-reserved",
					"--system-reserved-cgroup": "/system-reserved",
					"--eviction-hard": "memory.available<512Mi,nodefs.available<10%,nodefs.inodesFree<5%,imagefs.available<10%,imagefs.inodesFree<5%",
					"--system-reserved": "cpu=200m,memory=512Mi",
					"--kube-reserved": "cpu=200m,memory=512Mi"
				},
				"apiServerConfig": {
					"--runtime-config": "batch/v2alpha1=true,autoscaling/v2beta1=true",
					"--audit-log-maxage": "10",
					"--audit-log-maxbackup": "1",
					"--audit-log-maxsize": "100"
				},
				"serviceCidr": "{{ SERVICE_CIDR }}",
				"dnsServiceIP": "{{ DNS_SERVICE_IP }}",
				"outboundRuleIdleTimeoutInMinutes": 10
			}
		},
		"masterProfile": {
			"count": 1,
			"vmSize": "Standard_D2_v3",
			"dnsPrefix": "{{ MASTER_DNS_NAME }}",
			"vnetCidr": "{{ VNET_ADDRESS }}",
			"vnetSubnetId": "/subscriptions/{{ SUBSCRIPTION_ID }}/resourceGroups/{{ GROUP_NAME }}/providers/Microsoft.Network/virtualNetworks/clusterVnet/subnets/masterSubnet",
			"agentVnetSubnetId": "/subscriptions/{{ SUBSCRIPTION_ID }}/resourceGroups/{{ GROUP_NAME }}/providers/Microsoft.Network/virtualNetworks/clusterVnet/subnets/workerSubnet",
			"firstConsecutiveStaticIP": "{{ MASTER_IP_ADDRESS }}",
			"storageProfile": "ManagedDisks",
			"availabilityZones": [
				"1"
			]
		},
		"agentPoolProfiles": [
			{
				"name": "agentpool1",
				"count": 2,
				"vmSize": "Standard_D1_v2",
				"storageProfile": "ManagedDisks",
				"availabilityProfile": "VirtualMachineScaleSets",
				"vnetSubnetId": "/subscriptions/{{ SUBSCRIPTION_ID }}/resourceGroups/{{ GROUP_NAME }}/providers/Microsoft.Network/virtualNetworks/clusterVnet/subnets/workerSubnet",
				"availabilityZones": [
					"1"
				]
			}
		],
		"linuxProfile": {
			"adminUsername": "azureuser",
			"ssh": {
				"publicKeys": [
					{
						"keyData": ""
					}
				]
			}
		},
		"servicePrincipalProfile": {
			"clientId": "",
			"secret": ""
		}
	}
}
